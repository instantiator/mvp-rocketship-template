AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Simple template for a function behind an API gateway, supported by a DynamoDB table

Globals:
  Function:
    Timeout: 100
    Tracing: Active
  Api:
    TracingEnabled: true

Parameters:
  CognitoTestUserEmail:
    Description: Email address of the created user
    Type: String
  ApiStageName:
    Default: staging
    Description: StageName of API Gateway deployment
    Type: String

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    DependsOn: UserPool
    Properties:
      StageName: !Ref ApiStageName
      Cors: "'*'" # very permissive CORS for now
      # Cors: "'www.example.com'"  # SAM will automatically add AllowMethods with a list of methods for this API
      # DefinitionBody: # Pull in an OpenApi definition from S3
      #   'Fn::Transform':
      #     Name: 'AWS::Include'
      #     # Replace "bucket" with your bucket name
      #     Parameters:
      #       Location: s3://bucket/swagger.yaml
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt UserPool.Arn
     
  FunctionOne:
    Type: AWS::Serverless::Function
    Properties:
      Description: A simple example includes a .NET Core WebAPI App with DynamoDB table.
      CodeUri: ./src/SampleFunctions/FunctionOne/
      Handler: FunctionOne::FunctionOne.HandlerOne::Handle
      Runtime: dotnet6
      MemorySize: 1024
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref DatabaseTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref DatabaseTable
      Events:
        ProxyResource:
          Type: Api
          Properties:
            Path: /FunctionOne/{proxy+}
            Method: get # was ANY
            RestApiId: !Ref ApiGateway
            Auth: # optional per endpoint
              Authorizer: CognitoAuthorizer
        RootResource:
          Type: Api
          Properties:
            Path: /FunctionOne
            Method: get # was ANY
            RestApiId: !Ref ApiGateway
            Auth: # optional per endpoint
              Authorizer: CognitoAuthorizer

  DatabaseTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: simple-table
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: MvpAppUserPool
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      GenerateSecret: false # secret is only for server-side clients
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  UserPoolTestUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      DesiredDeliveryMediums:
        - EMAIL
      Username: !Ref CognitoTestUserEmail
      UserPoolId: !Ref UserPool

  # ApplicationResourceGroup:
  #   Type: AWS::ResourceGroups::Group
  #   Properties:
  #     Name:
  #       Fn::Join:
  #       - ''
  #       - - ApplicationInsights-SAM-
  #         - Ref: AWS::StackName
  #     ResourceQuery:
  #       Type: CLOUDFORMATION_STACK_1_0
  # ApplicationInsightsMonitoring:
  #   Type: AWS::ApplicationInsights::Application
  #   Properties:
  #     ResourceGroupName:
  #       Fn::Join:
  #       - ''
  #       - - ApplicationInsights-SAM-
  #         - Ref: AWS::StackName
  #     AutoConfigurationEnabled: 'true'
  #   DependsOn: ApplicationResourceGroup

Outputs:
  FunctionOneEndpoint:
    Description: API Gateway endpoint URL with auth
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/staging/FunctionOne"
  UserPoolId:
    Description: "ID of the Cognito User Pool"
    Value: !Ref UserPool
  CognitoClientId:
    Description: "ID of the Cognito User Pool Client"
    Value: !Ref UserPoolClient
